Clase #1 OOP

Fases de desarrollo de software

* Analisis
	- Estudiar y comprender el dominio del problema
	-Que hacer?
* Diseño 
	- Responde el Cómo hacerlo?
* Implementación
	- Traduce a la etapa de traducirlo al lenguaje de programación elegido. -> dando solución a un entorno concreto


Ventajas de OOP
Reutiliación de codigo
crea sistemas complejos
Facilita creacion de programas visuales
construccion de prototipos
trabajo en equipo
mantenimiento de software



Pilares

Abstraccion
	Modelado a partir de una simplificacion de la realidad
	Expresa las caracteristicas esenciales de un objeto
	las cuales permitan distinguir a un objeto respecto a los demás

Encapsulamiento
	Permite definir que características (methods and atributes)
	de un objeto serán públicas y cuales serán ocultas al resto de los objetos

Modularidad
	Fragmentación del problema a resolver, mediante la division del proyecto e sofware en un conjunto de módulos(paquetes y clases)

Polimorfismo
	El polimorfismo permite que distintos objetos pertenecientes a una misma clase respondan  de diferentes formas a un mismo mensaje
		Sobrecarga: El más conocido y se aplica cuando existen funciones con el mismo nombre en clases que son completamente independientes una de la otra.
			Paramétrico: Existen funciones con el mismo nombre pero se usan diferentes parámetros (nombre o tipo). Se selecciona el método dependiendo del tipo de datos que se envíe.
				Inclusión: Es cuando se puede llamar a un método sin tener que conocer su tipo, así no se toma en cuenta los detalles de las clases especializadas, utilizando una interfaz común

Herencia
	heredar atributos y metodos


Objetos y clases





Diagramas estructurales y de comportamiento

Diagramas Estructurales
Diagramas importantes -> diagrama de classes -> Despliege -> Paquetes


Diagramas de Clases
